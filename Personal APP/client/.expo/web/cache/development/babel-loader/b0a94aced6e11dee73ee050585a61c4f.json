{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/mac/git/WalthamForum/client/components/Signin.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Expo from \"expo\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.signIn = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Expo.Google.logInAsync({\n                androidClientId: \"265578484071-2d7u1c9lpcu7a00560ofj15oeu345o5o.apps.googleusercontent.com\",\n                scopes: [\"profile\", \"email\"]\n              }));\n\n            case 3:\n              result = _context.sent;\n\n              if (result.type === \"success\") {\n                _this.setState({\n                  signedIn: true,\n                  name: result.user.name,\n                  photoUrl: result.user.photoUrl\n                });\n              } else {\n                console.log(\"cancelled\");\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"error\", _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.state = {\n      signedIn: false,\n      name: \"\",\n      photoUrl: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, this.state.signedIn ? React.createElement(LoggedInPage, {\n        name: this.state.name,\n        photoUrl: this.state.photoUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }) : React.createElement(LoginPage, {\n        signIn: this.signIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\n\nvar LoginPage = function LoginPage(props) {\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Sign In With Google\"), React.createElement(Button, {\n    title: \"Sign in with Google\",\n    onPress: function onPress() {\n      return props.signIn();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar LoggedInPage = function LoggedInPage(props) {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Welcome:\", props.name), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: props.photoUrl\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  header: {\n    fontSize: 25\n  },\n  image: {\n    marginTop: 15,\n    width: 150,\n    height: 150,\n    borderColor: \"rgba(0,0,0,0.2)\",\n    borderWidth: 3,\n    borderRadius: 150\n  }\n});","map":{"version":3,"sources":["/Users/mac/git/WalthamForum/client/components/Signin.js"],"names":["React","Expo","App","props","signIn","Google","logInAsync","androidClientId","scopes","result","type","setState","signedIn","name","user","photoUrl","console","log","state","styles","container","Component","LoginPage","header","LoggedInPage","image","uri","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","marginTop","width","height","borderColor","borderWidth","borderRadius"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { StyleSheet, Text, View, Image, Button } from \"react-native\"\nimport Expo from \"expo\"\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      signedIn: false,\n      name: \"\",\n      photoUrl: \"\"\n    }\n  }\n  signIn = async () => {\n    try {\n      const result = await Expo.Google.logInAsync({\n        androidClientId:\n          \"265578484071-2d7u1c9lpcu7a00560ofj15oeu345o5o.apps.googleusercontent.com\",\n        //iosClientId: YOUR_CLIENT_ID_HERE,  <-- if you use iOS\n        scopes: [\"profile\", \"email\"]\n      })\n\n      if (result.type === \"success\") {\n        this.setState({\n          signedIn: true,\n          name: result.user.name,\n          photoUrl: result.user.photoUrl\n        })\n      } else {\n        console.log(\"cancelled\")\n      }\n    } catch (e) {\n      console.log(\"error\", e)\n    }\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        {this.state.signedIn ? (\n          <LoggedInPage name={this.state.name} photoUrl={this.state.photoUrl} />\n        ) : (\n          <LoginPage signIn={this.signIn} />\n        )}\n      </View>\n    )\n  }\n}\n\nconst LoginPage = props => {\n  return (\n    <View>\n      <Text style={styles.header}>Sign In With Google</Text>\n      <Button title=\"Sign in with Google\" onPress={() => props.signIn()} />\n    </View>\n  )\n}\n\nconst LoggedInPage = props => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Welcome:{props.name}</Text>\n      <Image style={styles.image} source={{ uri: props.photoUrl }} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  header: {\n    fontSize: 25\n  },\n  image: {\n    marginTop: 15,\n    width: 150,\n    height: 150,\n    borderColor: \"rgba(0,0,0,0.2)\",\n    borderWidth: 3,\n    borderRadius: 150\n  }\n})"]},"metadata":{},"sourceType":"module"}