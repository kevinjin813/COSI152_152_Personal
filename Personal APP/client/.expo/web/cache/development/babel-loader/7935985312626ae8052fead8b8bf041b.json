{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/git/WalthamForum/client/components/FetchData.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Card from \"../container/Card\";\nimport background from \"../assets/covidpic.jpg\";\n\nvar FetchData = function FetchData(_ref) {\n  var url = _ref.url;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var getData = function getData() {\n    var result, data;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 2:\n            result = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(result.json());\n\n          case 5:\n            data = _context.sent;\n            setData(data);\n            setLoading(false);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  if (loading) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"loading\");\n  } else {\n    return React.createElement(ImageBackground, {\n      source: background,\n      style: styles.backgroundImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.highlight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, \"Positive Cases Increase Today:\"), React.createElement(Text, {\n      style: styles.alarm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, JSON.stringify(data.positiveIncrease, null, 2)), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, \"Death Increase Today: \", JSON.stringify(data.deathIncrease, null, 2)), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, \"Hospitalized Increase Today: \", JSON.stringify(data.hospitalizedIncrease, null, 2)), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, \"Total Test Results: \", JSON.stringify(data.totalTestResults, null, 2)), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, \"Total Positive Cases: \", JSON.stringify(data.positive, null, 2)), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, \"Total Death: \", JSON.stringify(data.death, null, 2)), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"Total Hospitalized: \", JSON.stringify(data.hospitalized, null, 2)), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, \"Total Recovered: \", JSON.stringify(data.recovered, null, 2)), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, \"State: \", JSON.stringify(data.state, null, 2)), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, \"Last Update Time:\"), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, JSON.stringify(data.lastUpdateEt, null, 2)))));\n  }\n};\n\nexport default FetchData;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  backgroundImage: {\n    flex: 5,\n    height: '100%',\n    width: '100%',\n    resizeMode: 'cover'\n  },\n  highlight: {\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'crimson',\n    marginBottom: 15,\n    fontFamily: 'Georgia'\n  },\n  alarm: {\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'crimson',\n    marginBottom: 15,\n    fontFamily: 'Chalkduster, fantasy'\n  },\n  text: {\n    textAlign: 'center',\n    fontSize: 20,\n    marginBottom: 15,\n    fontFamily: 'Georgia'\n  }\n});","map":{"version":3,"sources":["/Users/mac/git/WalthamForum/client/components/FetchData.js"],"names":["React","useState","useEffect","Card","background","FetchData","url","data","setData","loading","setLoading","getData","fetch","result","json","styles","backgroundImage","highlight","alarm","JSON","stringify","positiveIncrease","text","deathIncrease","hospitalizedIncrease","totalTestResults","positive","death","hospitalized","recovered","state","lastUpdateEt","StyleSheet","create","container","flex","alignItems","height","width","resizeMode","textAlign","fontSize","fontWeight","color","marginBottom","fontFamily"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { View,Text,StyleSheet,ImageBackground} from 'react-native';\nimport Card from '../container/Card';\nimport background from '../assets/covidpic.jpg';\n\nconst FetchData = ({url}) => {\n    const [data,setData] = useState([])\n    const [loading,setLoading] = useState(true)\n\n    const getData = async () => {\n      const result = await fetch(url)\n      const data = await result.json()\n      setData(data)\n      setLoading(false)\n    }\n\n    useEffect(() => {getData();},[])\n\n    if (loading){\n      return (\n        <Text>loading</Text>\n      )\n    } else {\n      return (\n        <ImageBackground source={background} style={styles.backgroundImage}>\n          <View>\n            <Card>\n              <Text style = {styles.highlight}>Positive Cases Increase Today:</Text>\n              <Text style = {styles.alarm}>{JSON.stringify(data.positiveIncrease,null,2)}</Text>\n              <Text style = {styles.text}>Death Increase Today: {JSON.stringify(data.deathIncrease,null,2)}</Text>\n              <Text style = {styles.text}>Hospitalized Increase Today: {JSON.stringify(data.hospitalizedIncrease,null,2)}</Text>\n              <Text style = {styles.text}>Total Test Results: {JSON.stringify(data.totalTestResults,null,2)}</Text>\n              <Text style = {styles.text}>Total Positive Cases: {JSON.stringify(data.positive,null,2)}</Text>\n              <Text style = {styles.text}>Total Death: {JSON.stringify(data.death,null,2)}</Text>\n              <Text style = {styles.text}>Total Hospitalized: {JSON.stringify(data.hospitalized,null,2)}</Text>\n              <Text style = {styles.text}>Total Recovered: {JSON.stringify(data.recovered,null,2)}</Text>\n              <Text style = {styles.text}>State: {JSON.stringify(data.state,null,2)}</Text>\n              <Text style = {styles.text}>Last Update Time:</Text>\n              <Text style = {styles.text}>{JSON.stringify(data.lastUpdateEt,null,2)}</Text>\n            </Card>\n          </View>\n        </ImageBackground>\n      )\n    }\n}\n\nexport default FetchData\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  backgroundImage: {\n    flex:5,\n    height:'100%',\n    width:'100%',\n    resizeMode:'cover',\n  },\n  highlight:{\n    textAlign:'center',\n    fontSize: 20,\n    fontWeight:'bold',\n    color:'crimson',\n    marginBottom:15,\n    fontFamily:'Georgia',\n  },\n  alarm:{\n    textAlign:'center',\n    fontSize: 20,\n    fontWeight:'bold',\n    color:'crimson',\n    marginBottom:15,\n    fontFamily:'Chalkduster, fantasy',\n  },\n  text:{\n    textAlign:'center',\n    fontSize: 20,\n    marginBottom:15,\n    fontFamily:'Georgia',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}